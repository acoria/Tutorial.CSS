/*  
    Selectors: there are five types of selectors
        - element
        - class
        - id
        - tag
        - universal
        -> also combinators are possible, e.g. class & element (see combinators)

    Inheritance: each element inherits the styles of its parents but as soon as there is a selector, this overrides the inherited style.
    Cascading: multiple rules can apply to the same element
    Specificity: resolves conflicting styles for the same element
    
    Order of specificity priority (highest to lowest):
        - inline styles
        - #ID selectors
        - .class, :pseudo-class and [attribute] selectors
        - <tag> and ::pseudo-element selectors
        - * universal selector
        - inheritance
    Exception: combinators -> more specific selectors win over more general ones
*/

/* style every element inside body inherits */
body {
    font-family: 'Roboto', sans-serif;
}

/* element selector */
h1 {
    color: blue;
}

/* class selector */
.classForClassSelector {
    color: aquamarine;
}

/* id selector */
#idOfParagraph {
    color: green
}

/* attribute selector */
[disabled] {
    color: blueviolet
}

/* this selector, as any selector does, overrides the inherited style "font-family" */
h3 {
    font-family: serif;
    /* 
        if the inherited style should be used, "inherit" can be used to force inheritance to be used
        but it is not the best style, since it would have to be applied to any h3 tag:
        font-family: inherit;
        instead use combinators to switch the declaration around 
    */

}