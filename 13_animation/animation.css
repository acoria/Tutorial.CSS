/* Animations allow for more flexible changes e.g. transitions by defining individual keyframes. These keyframes consist of a start and end state
   and chaining them allows for different changes to be applied in sequence.

   Keyframes can be defined in two ways: 
        - Defining a starting and a finishing state:
            @keyframes wiggle {
                from {
                    transform: rotateZ(0);
                }
                to {
                    transform: rotateZ(10deg);
                }
            }
        - Defining multiple states:
            @keyframes wiggle {
                0% {
                    transform: rotateZ(0);
                }
                50%{
                    transform: rotateZ(-10deg);
                }
                100% {
                    transform: rotateZ(10deg);
                }
            }
            

   An animation is defined this way:
                     keyframe name | duration | delay |  timing-function | iterations | direction | fill-mode | play-state
        - animation:     wiggle        100ms      1s        ease-out           8        alternate    forwards    running
    
   - Duration: defines how long an animation (one iteration) should take
   - Delay: defines how long an animation is delayed for before it starts
   - Iterations: defines how many times an animation should be repeated
   - Direction: 
        - normal: default -> jumps back to the start and restarts the animation
        - alternate: after the keyframe finishes, it is animated back to the starting state (each direction counts as one iteration)
          If there are "8 iterations" and "alternate" is active, an animation is played 4 times: 4 times forward and 4 times backward
        - reverse: the animation starts with the end state and finishes with the starting state
        - alternate-reverse: combines alternate and reverse

   - Fill-mode (=Start/end state): defines in which state an element should start and end an animation
        - none: default -> the element jumps back to its originally defined css state defined in the css script (not the animation values from/to-values)
        - forwards: most often used -> keeps the final state from the last keyframe (defined in "to")
        - backwards: jumps back to the first##? keyframe starting state (defined in "from")
        - both: starts with the keyframe starting state (from) and finishes in the keyframe finishing state (to)

    - Play state: is used to pause an animation by setting either "running" or "paused"
*/

/* .defaultAnimation {
    animation: moveOnXAxis 1s linear 2;
}

.directionAlternate {
    animation: moveOnXAxis 1s linear 2 alternate;
}

.directionReverse {
    animation: moveOnXAxis 1s linear 2 reverse;
}

.fillModeForwards {
    animation: moveOnXAxis 1s linear 2 forwards;
}

.boxInDifferentStartingState {
    transform: translateX(5rem);
}

.fillModeBackwards {
    animation: moveOnXAxis 1s linear 2 backwards;
} */

.test {
    animation: test 3s linear forwards;
}

@keyframes test {
    0% {
        transform: skewY(0);
    }
    5%{
        transform: skewY(20deg);
    }
    10%{
        transform: skewY(-20deg);
    }
    15%{
        transform: skewY(0);
    }
    50%{
        transform: perspective(30px) rotateY(-20deg);
    }
    70%{
        transform: rotateY(-90deg);
    }
    71%{
        transform: scale(0.2)
    }
}

.box {
    display: inline-block;
    background-color: #004C78;
    color: white;
    text-align: center;
    width: 5em;
    height: 5rem;
}

.container {
    margin-top: 2rem;
}

button {
    background-color: #004C78;
    padding: 0.5rem;
    color: white;
    font-family: inherit;
    animation: wiggle 200ms 4;
}

@keyframes moveOnXAxis {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(10rem)
    }
}

@keyframes wiggle {
    0% {
        transform: rotateZ(0);
    }

    50% {
        transform: rotateZ(-10deg);
    }

    100% {
        transform: rotateZ(10deg);
    }
}

body {
    margin: 2rem;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}